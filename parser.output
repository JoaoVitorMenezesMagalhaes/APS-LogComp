Terminals unused in grammar

    IN


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 block: LBRACE statement_list RBRACE
    3      | LBRACE RBRACE

    4 statement_list: statement
    5               | statement_list statement

    6 statement: SPECIES IDENTIFIER IS type
    7          | IDENTIFIER ASSIGN relexpression
    8          | PRINT LBRACKET relexpression RBRACKET
    9          | IF LBRACKET relexpression RBRACKET block
   10          | IF LBRACKET relexpression RBRACKET block ELSE block
   11          | WHILE LBRACKET relexpression RBRACKET block
   12          | FUNCTION IDENTIFIER LBRACKET parameter_list RBRACKET block
   13          | IDENTIFIER LBRACKET parameter_list RBRACKET
   14          | NEWLINE

   15 parameter_list: ε
   16               | IDENTIFIER
   17               | parameter_list COMMA IDENTIFIER

   18 type: HERBIVORE
   19     | CARNIVORE
   20     | OMNIVORE
   21     | MAMMAL
   22     | BIRD
   23     | REPTILE
   24     | FISH

   25 relexpression: expression EQ expression
   26              | expression GT expression
   27              | expression LT expression
   28              | expression

   29 expression: term PLUS term
   30           | term MINUS term
   31           | term OR term
   32           | term

   33 term: factor
   34     | term MULT factor
   35     | term DIV factor
   36     | term AND factor

   37 factor: NUMBER
   38       | STRING
   39       | IDENTIFIER
   40       | PLUS factor
   41       | MINUS factor
   42       | NOT factor
   43       | LBRACKET relexpression RBRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 6 7 12 13 16 17 39
    NUMBER (259) 37
    STRING (260) 38
    NEWLINE (261) 14
    FUNCTION (262) 12
    IF (263) 9 10
    ELSE (264) 10
    WHILE (265) 11
    IN (266)
    SPECIES (267) 6
    IS (268) 6
    LBRACKET (269) 8 9 10 11 12 13 43
    RBRACKET (270) 8 9 10 11 12 13 43
    LBRACE (271) 2 3
    RBRACE (272) 2 3
    PRINT (273) 8
    COMMA (274) 17
    ASSIGN (275) 7
    EQ (276) 25
    NOT (277) 42
    MULT (278) 34
    DIV (279) 35
    PLUS (280) 29 40
    MINUS (281) 30 41
    AND (282) 36
    OR (283) 31
    LT (284) 27
    GT (285) 26
    HERBIVORE (286) 18
    CARNIVORE (287) 19
    OMNIVORE (288) 20
    MAMMAL (289) 21
    BIRD (290) 22
    REPTILE (291) 23
    FISH (292) 24


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program (39)
        on left: 1
        on right: 0
    block (40)
        on left: 2 3
        on right: 9 10 11 12
    statement_list (41)
        on left: 4 5
        on right: 1 2 5
    statement (42)
        on left: 6 7 8 9 10 11 12 13 14
        on right: 4 5
    parameter_list (43)
        on left: 15 16 17
        on right: 12 13 17
    type (44)
        on left: 18 19 20 21 22 23 24
        on right: 6
    relexpression (45)
        on left: 25 26 27 28
        on right: 7 8 9 10 11 43
    expression (46)
        on left: 29 30 31 32
        on right: 25 26 27 28
    term (47)
        on left: 33 34 35 36
        on right: 29 30 31 32 34 35 36
    factor (48)
        on left: 37 38 39 40 41 42 43
        on right: 33 34 35 36 40 41 42


State 0

    0 $accept: • program $end

    IDENTIFIER  shift, and go to state 1
    NEWLINE     shift, and go to state 2
    FUNCTION    shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    SPECIES     shift, and go to state 6
    PRINT       shift, and go to state 7

    program         go to state 8
    statement_list  go to state 9
    statement       go to state 10


State 1

    7 statement: IDENTIFIER • ASSIGN relexpression
   13          | IDENTIFIER • LBRACKET parameter_list RBRACKET

    LBRACKET  shift, and go to state 11
    ASSIGN    shift, and go to state 12


State 2

   14 statement: NEWLINE •

    $default  reduce using rule 14 (statement)


State 3

   12 statement: FUNCTION • IDENTIFIER LBRACKET parameter_list RBRACKET block

    IDENTIFIER  shift, and go to state 13


State 4

    9 statement: IF • LBRACKET relexpression RBRACKET block
   10          | IF • LBRACKET relexpression RBRACKET block ELSE block

    LBRACKET  shift, and go to state 14


State 5

   11 statement: WHILE • LBRACKET relexpression RBRACKET block

    LBRACKET  shift, and go to state 15


State 6

    6 statement: SPECIES • IDENTIFIER IS type

    IDENTIFIER  shift, and go to state 16


State 7

    8 statement: PRINT • LBRACKET relexpression RBRACKET

    LBRACKET  shift, and go to state 17


State 8

    0 $accept: program • $end

    $end  shift, and go to state 18


State 9

    1 program: statement_list •
    5 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 1
    NEWLINE     shift, and go to state 2
    FUNCTION    shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    SPECIES     shift, and go to state 6
    PRINT       shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement  go to state 19


State 10

    4 statement_list: statement •

    $default  reduce using rule 4 (statement_list)


State 11

   13 statement: IDENTIFIER LBRACKET • parameter_list RBRACKET

    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 15 (parameter_list)

    parameter_list  go to state 21


State 12

    7 statement: IDENTIFIER ASSIGN • relexpression

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    relexpression  go to state 29
    expression     go to state 30
    term           go to state 31
    factor         go to state 32


State 13

   12 statement: FUNCTION IDENTIFIER • LBRACKET parameter_list RBRACKET block

    LBRACKET  shift, and go to state 33


State 14

    9 statement: IF LBRACKET • relexpression RBRACKET block
   10          | IF LBRACKET • relexpression RBRACKET block ELSE block

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    relexpression  go to state 34
    expression     go to state 30
    term           go to state 31
    factor         go to state 32


State 15

   11 statement: WHILE LBRACKET • relexpression RBRACKET block

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    relexpression  go to state 35
    expression     go to state 30
    term           go to state 31
    factor         go to state 32


State 16

    6 statement: SPECIES IDENTIFIER • IS type

    IS  shift, and go to state 36


State 17

    8 statement: PRINT LBRACKET • relexpression RBRACKET

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    relexpression  go to state 37
    expression     go to state 30
    term           go to state 31
    factor         go to state 32


State 18

    0 $accept: program $end •

    $default  accept


State 19

    5 statement_list: statement_list statement •

    $default  reduce using rule 5 (statement_list)


State 20

   16 parameter_list: IDENTIFIER •

    $default  reduce using rule 16 (parameter_list)


State 21

   13 statement: IDENTIFIER LBRACKET parameter_list • RBRACKET
   17 parameter_list: parameter_list • COMMA IDENTIFIER

    RBRACKET  shift, and go to state 38
    COMMA     shift, and go to state 39


State 22

   39 factor: IDENTIFIER •

    $default  reduce using rule 39 (factor)


State 23

   37 factor: NUMBER •

    $default  reduce using rule 37 (factor)


State 24

   38 factor: STRING •

    $default  reduce using rule 38 (factor)


State 25

   43 factor: LBRACKET • relexpression RBRACKET

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    relexpression  go to state 40
    expression     go to state 30
    term           go to state 31
    factor         go to state 32


State 26

   42 factor: NOT • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 41


State 27

   40 factor: PLUS • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 42


State 28

   41 factor: MINUS • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 43


State 29

    7 statement: IDENTIFIER ASSIGN relexpression •

    $default  reduce using rule 7 (statement)


State 30

   25 relexpression: expression • EQ expression
   26              | expression • GT expression
   27              | expression • LT expression
   28              | expression •

    EQ  shift, and go to state 44
    LT  shift, and go to state 45
    GT  shift, and go to state 46

    $default  reduce using rule 28 (relexpression)


State 31

   29 expression: term • PLUS term
   30           | term • MINUS term
   31           | term • OR term
   32           | term •
   34 term: term • MULT factor
   35     | term • DIV factor
   36     | term • AND factor

    MULT   shift, and go to state 47
    DIV    shift, and go to state 48
    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    AND    shift, and go to state 51
    OR     shift, and go to state 52

    $default  reduce using rule 32 (expression)


State 32

   33 term: factor •

    $default  reduce using rule 33 (term)


State 33

   12 statement: FUNCTION IDENTIFIER LBRACKET • parameter_list RBRACKET block

    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 15 (parameter_list)

    parameter_list  go to state 53


State 34

    9 statement: IF LBRACKET relexpression • RBRACKET block
   10          | IF LBRACKET relexpression • RBRACKET block ELSE block

    RBRACKET  shift, and go to state 54


State 35

   11 statement: WHILE LBRACKET relexpression • RBRACKET block

    RBRACKET  shift, and go to state 55


State 36

    6 statement: SPECIES IDENTIFIER IS • type

    HERBIVORE  shift, and go to state 56
    CARNIVORE  shift, and go to state 57
    OMNIVORE   shift, and go to state 58
    MAMMAL     shift, and go to state 59
    BIRD       shift, and go to state 60
    REPTILE    shift, and go to state 61
    FISH       shift, and go to state 62

    type  go to state 63


State 37

    8 statement: PRINT LBRACKET relexpression • RBRACKET

    RBRACKET  shift, and go to state 64


State 38

   13 statement: IDENTIFIER LBRACKET parameter_list RBRACKET •

    $default  reduce using rule 13 (statement)


State 39

   17 parameter_list: parameter_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 40

   43 factor: LBRACKET relexpression • RBRACKET

    RBRACKET  shift, and go to state 66


State 41

   42 factor: NOT factor •

    $default  reduce using rule 42 (factor)


State 42

   40 factor: PLUS factor •

    $default  reduce using rule 40 (factor)


State 43

   41 factor: MINUS factor •

    $default  reduce using rule 41 (factor)


State 44

   25 relexpression: expression EQ • expression

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    expression  go to state 67
    term        go to state 31
    factor      go to state 32


State 45

   27 relexpression: expression LT • expression

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    expression  go to state 68
    term        go to state 31
    factor      go to state 32


State 46

   26 relexpression: expression GT • expression

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    expression  go to state 69
    term        go to state 31
    factor      go to state 32


State 47

   34 term: term MULT • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 70


State 48

   35 term: term DIV • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 71


State 49

   29 expression: term PLUS • term

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    term    go to state 72
    factor  go to state 32


State 50

   30 expression: term MINUS • term

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    term    go to state 73
    factor  go to state 32


State 51

   36 term: term AND • factor

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    factor  go to state 74


State 52

   31 expression: term OR • term

    IDENTIFIER  shift, and go to state 22
    NUMBER      shift, and go to state 23
    STRING      shift, and go to state 24
    LBRACKET    shift, and go to state 25
    NOT         shift, and go to state 26
    PLUS        shift, and go to state 27
    MINUS       shift, and go to state 28

    term    go to state 75
    factor  go to state 32


State 53

   12 statement: FUNCTION IDENTIFIER LBRACKET parameter_list • RBRACKET block
   17 parameter_list: parameter_list • COMMA IDENTIFIER

    RBRACKET  shift, and go to state 76
    COMMA     shift, and go to state 39


State 54

    9 statement: IF LBRACKET relexpression RBRACKET • block
   10          | IF LBRACKET relexpression RBRACKET • block ELSE block

    LBRACE  shift, and go to state 77

    block  go to state 78


State 55

   11 statement: WHILE LBRACKET relexpression RBRACKET • block

    LBRACE  shift, and go to state 77

    block  go to state 79


State 56

   18 type: HERBIVORE •

    $default  reduce using rule 18 (type)


State 57

   19 type: CARNIVORE •

    $default  reduce using rule 19 (type)


State 58

   20 type: OMNIVORE •

    $default  reduce using rule 20 (type)


State 59

   21 type: MAMMAL •

    $default  reduce using rule 21 (type)


State 60

   22 type: BIRD •

    $default  reduce using rule 22 (type)


State 61

   23 type: REPTILE •

    $default  reduce using rule 23 (type)


State 62

   24 type: FISH •

    $default  reduce using rule 24 (type)


State 63

    6 statement: SPECIES IDENTIFIER IS type •

    $default  reduce using rule 6 (statement)


State 64

    8 statement: PRINT LBRACKET relexpression RBRACKET •

    $default  reduce using rule 8 (statement)


State 65

   17 parameter_list: parameter_list COMMA IDENTIFIER •

    $default  reduce using rule 17 (parameter_list)


State 66

   43 factor: LBRACKET relexpression RBRACKET •

    $default  reduce using rule 43 (factor)


State 67

   25 relexpression: expression EQ expression •

    $default  reduce using rule 25 (relexpression)


State 68

   27 relexpression: expression LT expression •

    $default  reduce using rule 27 (relexpression)


State 69

   26 relexpression: expression GT expression •

    $default  reduce using rule 26 (relexpression)


State 70

   34 term: term MULT factor •

    $default  reduce using rule 34 (term)


State 71

   35 term: term DIV factor •

    $default  reduce using rule 35 (term)


State 72

   29 expression: term PLUS term •
   34 term: term • MULT factor
   35     | term • DIV factor
   36     | term • AND factor

    MULT  shift, and go to state 47
    DIV   shift, and go to state 48
    AND   shift, and go to state 51

    $default  reduce using rule 29 (expression)


State 73

   30 expression: term MINUS term •
   34 term: term • MULT factor
   35     | term • DIV factor
   36     | term • AND factor

    MULT  shift, and go to state 47
    DIV   shift, and go to state 48
    AND   shift, and go to state 51

    $default  reduce using rule 30 (expression)


State 74

   36 term: term AND factor •

    $default  reduce using rule 36 (term)


State 75

   31 expression: term OR term •
   34 term: term • MULT factor
   35     | term • DIV factor
   36     | term • AND factor

    MULT  shift, and go to state 47
    DIV   shift, and go to state 48
    AND   shift, and go to state 51

    $default  reduce using rule 31 (expression)


State 76

   12 statement: FUNCTION IDENTIFIER LBRACKET parameter_list RBRACKET • block

    LBRACE  shift, and go to state 77

    block  go to state 80


State 77

    2 block: LBRACE • statement_list RBRACE
    3      | LBRACE • RBRACE

    IDENTIFIER  shift, and go to state 1
    NEWLINE     shift, and go to state 2
    FUNCTION    shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    SPECIES     shift, and go to state 6
    RBRACE      shift, and go to state 81
    PRINT       shift, and go to state 7

    statement_list  go to state 82
    statement       go to state 10


State 78

    9 statement: IF LBRACKET relexpression RBRACKET block •
   10          | IF LBRACKET relexpression RBRACKET block • ELSE block

    ELSE  shift, and go to state 83

    $default  reduce using rule 9 (statement)


State 79

   11 statement: WHILE LBRACKET relexpression RBRACKET block •

    $default  reduce using rule 11 (statement)


State 80

   12 statement: FUNCTION IDENTIFIER LBRACKET parameter_list RBRACKET block •

    $default  reduce using rule 12 (statement)


State 81

    3 block: LBRACE RBRACE •

    $default  reduce using rule 3 (block)


State 82

    2 block: LBRACE statement_list • RBRACE
    5 statement_list: statement_list • statement

    IDENTIFIER  shift, and go to state 1
    NEWLINE     shift, and go to state 2
    FUNCTION    shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    SPECIES     shift, and go to state 6
    RBRACE      shift, and go to state 84
    PRINT       shift, and go to state 7

    statement  go to state 19


State 83

   10 statement: IF LBRACKET relexpression RBRACKET block ELSE • block

    LBRACE  shift, and go to state 77

    block  go to state 85


State 84

    2 block: LBRACE statement_list RBRACE •

    $default  reduce using rule 2 (block)


State 85

   10 statement: IF LBRACKET relexpression RBRACKET block ELSE block •

    $default  reduce using rule 10 (statement)
