Terminals unused in grammar

    RETURN
    NEQ
    AND
    NEWLINE


State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: block $end

    1 block: statement

    2 statement: assignment
    3          | conditional
    4          | print
    5          | loop
    6          | species
    7          | function
    8          | class

    9 assignment: IDENTIFIER ASSIGN expression

   10 conditional: IF LBRACKET expression RBRACKET COLON block else_block_opt

   11 else_block_opt: ε
   12               | ELSE COLON block

   13 loop: while_loop
   14     | for_loop

   15 while_loop: WHILE LBRACKET expression RBRACKET COLON block

   16 for_loop: FOR LBRACKET IDENTIFIER IN range RBRACKET COLON block

   17 range: LBRACE NUMBER COLON NUMBER RBRACE

   18 function: FUNCTION IDENTIFIER LBRACKET parameters_opt RBRACKET COLON block

   19 parameters_opt: ε
   20               | parameter_list

   21 parameter_list: IDENTIFIER
   22               | parameter_list COMMA IDENTIFIER

   23 class: CLASS IDENTIFIER COLON block

   24 print: PRINT LBRACKET expression RBRACKET

   25 species: SPECIES LBRACKET IDENTIFIER RBRACKET COLON attribute_list

   26 attribute_list: attribute
   27               | attribute_list COMMA attribute

   28 attribute: IDENTIFIER ASSIGN literal

   29 literal: STRING
   30        | NUMBER

   31 expression: condition
   32           | expression OR condition

   33 condition: term
   34          | condition EQ term
   35          | condition NOT term

   36 term: factor
   37     | term DIVIDE factor
   38     | term TIMES factor

   39 factor: IDENTIFIER
   40       | NUMBER
   41       | STRING
   42       | LPAREN expression RPAREN
   43       | MINUS factor
   44       | PLUS factor


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 9 16 18 21 22 23 25 28 39
    NUMBER (259) 17 30 40
    STRING (260) 29 41
    FUNCTION (261) 18
    CLASS (262) 23
    IF (263) 10
    ELSE (264) 12
    WHILE (265) 15
    FOR (266) 16
    IN (267) 16
    SPECIES (268) 25
    RETURN (269)
    ASSIGN (270) 9 28
    LBRACKET (271) 10 15 16 18 24 25
    RBRACKET (272) 10 15 16 18 24 25
    NOT (273) 35
    EQ (274) 34
    DIVIDE (275) 37
    NEQ (276)
    AND (277)
    OR (278) 32
    PRINT (279) 24
    COLON (280) 10 12 15 16 17 18 23 25
    COMMA (281) 22 27
    LPAREN (282) 42
    RPAREN (283) 42
    LBRACE (284) 17
    RBRACE (285) 17
    PLUS (286) 44
    MINUS (287) 43
    TIMES (288) 38
    NEWLINE (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    block (36)
        on left: 1
        on right: 0 10 12 15 16 18 23
    statement (37)
        on left: 2 3 4 5 6 7 8
        on right: 1
    assignment (38)
        on left: 9
        on right: 2
    conditional (39)
        on left: 10
        on right: 3
    else_block_opt (40)
        on left: 11 12
        on right: 10
    loop (41)
        on left: 13 14
        on right: 5
    while_loop (42)
        on left: 15
        on right: 13
    for_loop (43)
        on left: 16
        on right: 14
    range (44)
        on left: 17
        on right: 16
    function (45)
        on left: 18
        on right: 7
    parameters_opt (46)
        on left: 19 20
        on right: 18
    parameter_list (47)
        on left: 21 22
        on right: 20 22
    class (48)
        on left: 23
        on right: 8
    print (49)
        on left: 24
        on right: 4
    species (50)
        on left: 25
        on right: 6
    attribute_list (51)
        on left: 26 27
        on right: 25 27
    attribute (52)
        on left: 28
        on right: 26 27
    literal (53)
        on left: 29 30
        on right: 28
    expression (54)
        on left: 31 32
        on right: 9 10 15 24 32 42
    condition (55)
        on left: 33 34 35
        on right: 31 32 34 35
    term (56)
        on left: 36 37 38
        on right: 33 34 35 37 38
    factor (57)
        on left: 39 40 41 42 43 44
        on right: 36 37 38 43 44


State 0

    0 $accept: • block $end

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 9
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 1

    9 assignment: IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 20


State 2

   18 function: FUNCTION • IDENTIFIER LBRACKET parameters_opt RBRACKET COLON block

    IDENTIFIER  shift, and go to state 21


State 3

   23 class: CLASS • IDENTIFIER COLON block

    IDENTIFIER  shift, and go to state 22


State 4

   10 conditional: IF • LBRACKET expression RBRACKET COLON block else_block_opt

    LBRACKET  shift, and go to state 23


State 5

   15 while_loop: WHILE • LBRACKET expression RBRACKET COLON block

    LBRACKET  shift, and go to state 24


State 6

   16 for_loop: FOR • LBRACKET IDENTIFIER IN range RBRACKET COLON block

    LBRACKET  shift, and go to state 25


State 7

   25 species: SPECIES • LBRACKET IDENTIFIER RBRACKET COLON attribute_list

    LBRACKET  shift, and go to state 26


State 8

   24 print: PRINT • LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 27


State 9

    0 $accept: block • $end

    $end  shift, and go to state 28


State 10

    1 block: statement •

    $default  reduce using rule 1 (block)


State 11

    2 statement: assignment •

    $default  reduce using rule 2 (statement)


State 12

    3 statement: conditional •

    $default  reduce using rule 3 (statement)


State 13

    5 statement: loop •

    $default  reduce using rule 5 (statement)


State 14

   13 loop: while_loop •

    $default  reduce using rule 13 (loop)


State 15

   14 loop: for_loop •

    $default  reduce using rule 14 (loop)


State 16

    7 statement: function •

    $default  reduce using rule 7 (statement)


State 17

    8 statement: class •

    $default  reduce using rule 8 (statement)


State 18

    4 statement: print •

    $default  reduce using rule 4 (statement)


State 19

    6 statement: species •

    $default  reduce using rule 6 (statement)


State 20

    9 assignment: IDENTIFIER ASSIGN • expression

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    expression  go to state 35
    condition   go to state 36
    term        go to state 37
    factor      go to state 38


State 21

   18 function: FUNCTION IDENTIFIER • LBRACKET parameters_opt RBRACKET COLON block

    LBRACKET  shift, and go to state 39


State 22

   23 class: CLASS IDENTIFIER • COLON block

    COLON  shift, and go to state 40


State 23

   10 conditional: IF LBRACKET • expression RBRACKET COLON block else_block_opt

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    expression  go to state 41
    condition   go to state 36
    term        go to state 37
    factor      go to state 38


State 24

   15 while_loop: WHILE LBRACKET • expression RBRACKET COLON block

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    expression  go to state 42
    condition   go to state 36
    term        go to state 37
    factor      go to state 38


State 25

   16 for_loop: FOR LBRACKET • IDENTIFIER IN range RBRACKET COLON block

    IDENTIFIER  shift, and go to state 43


State 26

   25 species: SPECIES LBRACKET • IDENTIFIER RBRACKET COLON attribute_list

    IDENTIFIER  shift, and go to state 44


State 27

   24 print: PRINT LBRACKET • expression RBRACKET

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    expression  go to state 45
    condition   go to state 36
    term        go to state 37
    factor      go to state 38


State 28

    0 $accept: block $end •

    $default  accept


State 29

   39 factor: IDENTIFIER •

    $default  reduce using rule 39 (factor)


State 30

   40 factor: NUMBER •

    $default  reduce using rule 40 (factor)


State 31

   41 factor: STRING •

    $default  reduce using rule 41 (factor)


State 32

   42 factor: LPAREN • expression RPAREN

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    expression  go to state 46
    condition   go to state 36
    term        go to state 37
    factor      go to state 38


State 33

   44 factor: PLUS • factor

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    factor  go to state 47


State 34

   43 factor: MINUS • factor

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    factor  go to state 48


State 35

    9 assignment: IDENTIFIER ASSIGN expression •
   32 expression: expression • OR condition

    OR  shift, and go to state 49

    $default  reduce using rule 9 (assignment)


State 36

   31 expression: condition •
   34 condition: condition • EQ term
   35          | condition • NOT term

    NOT  shift, and go to state 50
    EQ   shift, and go to state 51

    $default  reduce using rule 31 (expression)


State 37

   33 condition: term •
   37 term: term • DIVIDE factor
   38     | term • TIMES factor

    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    $default  reduce using rule 33 (condition)


State 38

   36 term: factor •

    $default  reduce using rule 36 (term)


State 39

   18 function: FUNCTION IDENTIFIER LBRACKET • parameters_opt RBRACKET COLON block

    IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 19 (parameters_opt)

    parameters_opt  go to state 55
    parameter_list  go to state 56


State 40

   23 class: CLASS IDENTIFIER COLON • block

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 57
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 41

   10 conditional: IF LBRACKET expression • RBRACKET COLON block else_block_opt
   32 expression: expression • OR condition

    RBRACKET  shift, and go to state 58
    OR        shift, and go to state 49


State 42

   15 while_loop: WHILE LBRACKET expression • RBRACKET COLON block
   32 expression: expression • OR condition

    RBRACKET  shift, and go to state 59
    OR        shift, and go to state 49


State 43

   16 for_loop: FOR LBRACKET IDENTIFIER • IN range RBRACKET COLON block

    IN  shift, and go to state 60


State 44

   25 species: SPECIES LBRACKET IDENTIFIER • RBRACKET COLON attribute_list

    RBRACKET  shift, and go to state 61


State 45

   24 print: PRINT LBRACKET expression • RBRACKET
   32 expression: expression • OR condition

    RBRACKET  shift, and go to state 62
    OR        shift, and go to state 49


State 46

   32 expression: expression • OR condition
   42 factor: LPAREN expression • RPAREN

    OR      shift, and go to state 49
    RPAREN  shift, and go to state 63


State 47

   44 factor: PLUS factor •

    $default  reduce using rule 44 (factor)


State 48

   43 factor: MINUS factor •

    $default  reduce using rule 43 (factor)


State 49

   32 expression: expression OR • condition

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    condition  go to state 64
    term       go to state 37
    factor     go to state 38


State 50

   35 condition: condition NOT • term

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    term    go to state 65
    factor  go to state 38


State 51

   34 condition: condition EQ • term

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    term    go to state 66
    factor  go to state 38


State 52

   37 term: term DIVIDE • factor

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    factor  go to state 67


State 53

   38 term: term TIMES • factor

    IDENTIFIER  shift, and go to state 29
    NUMBER      shift, and go to state 30
    STRING      shift, and go to state 31
    LPAREN      shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34

    factor  go to state 68


State 54

   21 parameter_list: IDENTIFIER •

    $default  reduce using rule 21 (parameter_list)


State 55

   18 function: FUNCTION IDENTIFIER LBRACKET parameters_opt • RBRACKET COLON block

    RBRACKET  shift, and go to state 69


State 56

   20 parameters_opt: parameter_list •
   22 parameter_list: parameter_list • COMMA IDENTIFIER

    COMMA  shift, and go to state 70

    $default  reduce using rule 20 (parameters_opt)


State 57

   23 class: CLASS IDENTIFIER COLON block •

    $default  reduce using rule 23 (class)


State 58

   10 conditional: IF LBRACKET expression RBRACKET • COLON block else_block_opt

    COLON  shift, and go to state 71


State 59

   15 while_loop: WHILE LBRACKET expression RBRACKET • COLON block

    COLON  shift, and go to state 72


State 60

   16 for_loop: FOR LBRACKET IDENTIFIER IN • range RBRACKET COLON block

    LBRACE  shift, and go to state 73

    range  go to state 74


State 61

   25 species: SPECIES LBRACKET IDENTIFIER RBRACKET • COLON attribute_list

    COLON  shift, and go to state 75


State 62

   24 print: PRINT LBRACKET expression RBRACKET •

    $default  reduce using rule 24 (print)


State 63

   42 factor: LPAREN expression RPAREN •

    $default  reduce using rule 42 (factor)


State 64

   32 expression: expression OR condition •
   34 condition: condition • EQ term
   35          | condition • NOT term

    NOT  shift, and go to state 50
    EQ   shift, and go to state 51

    $default  reduce using rule 32 (expression)


State 65

   35 condition: condition NOT term •
   37 term: term • DIVIDE factor
   38     | term • TIMES factor

    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    $default  reduce using rule 35 (condition)


State 66

   34 condition: condition EQ term •
   37 term: term • DIVIDE factor
   38     | term • TIMES factor

    DIVIDE  shift, and go to state 52
    TIMES   shift, and go to state 53

    $default  reduce using rule 34 (condition)


State 67

   37 term: term DIVIDE factor •

    $default  reduce using rule 37 (term)


State 68

   38 term: term TIMES factor •

    $default  reduce using rule 38 (term)


State 69

   18 function: FUNCTION IDENTIFIER LBRACKET parameters_opt RBRACKET • COLON block

    COLON  shift, and go to state 76


State 70

   22 parameter_list: parameter_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 77


State 71

   10 conditional: IF LBRACKET expression RBRACKET COLON • block else_block_opt

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 78
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 72

   15 while_loop: WHILE LBRACKET expression RBRACKET COLON • block

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 79
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 73

   17 range: LBRACE • NUMBER COLON NUMBER RBRACE

    NUMBER  shift, and go to state 80


State 74

   16 for_loop: FOR LBRACKET IDENTIFIER IN range • RBRACKET COLON block

    RBRACKET  shift, and go to state 81


State 75

   25 species: SPECIES LBRACKET IDENTIFIER RBRACKET COLON • attribute_list

    IDENTIFIER  shift, and go to state 82

    attribute_list  go to state 83
    attribute       go to state 84


State 76

   18 function: FUNCTION IDENTIFIER LBRACKET parameters_opt RBRACKET COLON • block

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 85
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 77

   22 parameter_list: parameter_list COMMA IDENTIFIER •

    $default  reduce using rule 22 (parameter_list)


State 78

   10 conditional: IF LBRACKET expression RBRACKET COLON block • else_block_opt

    ELSE  shift, and go to state 86

    ELSE      [reduce using rule 11 (else_block_opt)]
    $default  reduce using rule 11 (else_block_opt)

    else_block_opt  go to state 87

    shift/reduce conflict on token ELSE:
       11 else_block_opt: ε •
       12 else_block_opt: • ELSE COLON block
      Example: IF LBRACKET expression RBRACKET COLON IF LBRACKET expression RBRACKET COLON block • ELSE COLON block
      Shift derivation
        conditional
        ↳ 10: IF LBRACKET expression RBRACKET COLON block                                                                                else_block_opt
                                                    ↳ 1: statement                                                                       ↳ 10: ε
                                                         ↳ 3: conditional
                                                              ↳ 10: IF LBRACKET expression RBRACKET COLON block else_block_opt
                                                                                                                ↳ 12: • ELSE COLON block
      Reduce derivation
        conditional
        ↳ 10: IF LBRACKET expression RBRACKET COLON block                                                                      else_block_opt
                                                    ↳ 1: statement                                                             ↳ 12: ELSE COLON block
                                                         ↳ 3: conditional
                                                              ↳ 10: IF LBRACKET expression RBRACKET COLON block else_block_opt
                                                                                                                ↳ 11: ε •



State 79

   15 while_loop: WHILE LBRACKET expression RBRACKET COLON block •

    $default  reduce using rule 15 (while_loop)


State 80

   17 range: LBRACE NUMBER • COLON NUMBER RBRACE

    COLON  shift, and go to state 88


State 81

   16 for_loop: FOR LBRACKET IDENTIFIER IN range RBRACKET • COLON block

    COLON  shift, and go to state 89


State 82

   28 attribute: IDENTIFIER • ASSIGN literal

    ASSIGN  shift, and go to state 90


State 83

   25 species: SPECIES LBRACKET IDENTIFIER RBRACKET COLON attribute_list •
   27 attribute_list: attribute_list • COMMA attribute

    COMMA  shift, and go to state 91

    $default  reduce using rule 25 (species)


State 84

   26 attribute_list: attribute •

    $default  reduce using rule 26 (attribute_list)


State 85

   18 function: FUNCTION IDENTIFIER LBRACKET parameters_opt RBRACKET COLON block •

    $default  reduce using rule 18 (function)


State 86

   12 else_block_opt: ELSE • COLON block

    COLON  shift, and go to state 92


State 87

   10 conditional: IF LBRACKET expression RBRACKET COLON block else_block_opt •

    $default  reduce using rule 10 (conditional)


State 88

   17 range: LBRACE NUMBER COLON • NUMBER RBRACE

    NUMBER  shift, and go to state 93


State 89

   16 for_loop: FOR LBRACKET IDENTIFIER IN range RBRACKET COLON • block

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 94
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 90

   28 attribute: IDENTIFIER ASSIGN • literal

    NUMBER  shift, and go to state 95
    STRING  shift, and go to state 96

    literal  go to state 97


State 91

   27 attribute_list: attribute_list COMMA • attribute

    IDENTIFIER  shift, and go to state 82

    attribute  go to state 98


State 92

   12 else_block_opt: ELSE COLON • block

    IDENTIFIER  shift, and go to state 1
    FUNCTION    shift, and go to state 2
    CLASS       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    FOR         shift, and go to state 6
    SPECIES     shift, and go to state 7
    PRINT       shift, and go to state 8

    block        go to state 99
    statement    go to state 10
    assignment   go to state 11
    conditional  go to state 12
    loop         go to state 13
    while_loop   go to state 14
    for_loop     go to state 15
    function     go to state 16
    class        go to state 17
    print        go to state 18
    species      go to state 19


State 93

   17 range: LBRACE NUMBER COLON NUMBER • RBRACE

    RBRACE  shift, and go to state 100


State 94

   16 for_loop: FOR LBRACKET IDENTIFIER IN range RBRACKET COLON block •

    $default  reduce using rule 16 (for_loop)


State 95

   30 literal: NUMBER •

    $default  reduce using rule 30 (literal)


State 96

   29 literal: STRING •

    $default  reduce using rule 29 (literal)


State 97

   28 attribute: IDENTIFIER ASSIGN literal •

    $default  reduce using rule 28 (attribute)


State 98

   27 attribute_list: attribute_list COMMA attribute •

    $default  reduce using rule 27 (attribute_list)


State 99

   12 else_block_opt: ELSE COLON block •

    $default  reduce using rule 12 (else_block_opt)


State 100

   17 range: LBRACE NUMBER COLON NUMBER RBRACE •

    $default  reduce using rule 17 (range)
